@{
	ViewData["Title"] = "Product Details";
}
@model Models.ViewModels.ProductDetailsViewModel;

<div class="details-container">
	@(Html.Kendo().Breadcrumb()
		.Name("breadcrumb")
		.Navigational(true)
		.Items(items =>
		{
			items.Add()
			.Type(BreadcrumbItemType.RootItem)
			.Href("/Home/Index")
			.ShowText(false)
			.Icon("home")
			.ShowIcon(true);
			items.Add()
			.Type(BreadcrumbItemType.Item)
			.Href("/Home/" + Model.Category)
			.Text(Model.Category)
			.ShowText(true);
			items.Add()
			.Type(BreadcrumbItemType.Item)
			.Href(@Url.Action("Category", "Products", new { subCategory = Model.SubCategory }))
			.Text(Model.SubCategory)
			.ShowText(true);
			items.Add()
			.Type(BreadcrumbItemType.Item)
			.Href(@Url.Action("Details", "Products", new { productId = Model.Id }))
			.Text(Model.Name)
			.ShowText(true);
		})
	)
	<div class="model-details">
		<div class="model-image">
			<img width="453" height="453" src="@Url.Action("GetProductLargePhotoById", "Products")?photoId=@Model.PhotoId">			
		</div>
		<div class="model-info">
			<div class="info-top">
				<h1 class="details-heading">
					@{
						if (Model.Model == null)
						{
							@Model.Name
						}
						else
						{
							@Model.Model
						}
					}
				</h1>
				@(Html.Kendo().Rating()
					.Name("productRating")
					.Min(1)
					.Max(5)
					.Precision("half")
					.Value(@Model.AverageRating)
					.Readonly(true)
					.Label(false)
					.HtmlAttributes(new { style = "color: var(--voyago-green);" })
					)
				<hr class="splitter1">
			</div>
			<div class="info-bottom">
				<div class="bottom-left">
					<div class="info-row" style="gap:53px;">
						<p class="info-title">Product Name</p>
						<p class="info-value">@Model.Name</p>
					</div>
					<div class="info-row" style="gap:76px;">
						<p class="info-title">Product No</p>
						<p>@Model.ProductNumber</p>
					</div>
					<div class="info-row" style="gap:130px;">
						<p class="info-title">Size</p>
						@{
							if (Model.Size != null)
							{
								@(Html.Kendo().DropDownList()
									.Name("sizePicker")
									.Value(@Model.Size)
									.FillMode(FillMode.None)
									.Rounded(Rounded.None)
									.DataSource(source =>
									{
										source.Read(read =>
										{
											read.Action("GetAvailableSizes", "Products", new { productId = @Model.Id });
										});
									})
									.Events(e => e.Change(@<text>function () { selectAlternateProductVersion(@Model.ModelId); }</text>))
								)
							}
						}
					</div>
					<div class="info-row" style="gap:109px;">
						<p class="info-title">Weight</p>
						<p>@Model.Weight</p>
					</div>
					<div class="info-row" style="gap:121px;">
						<p class="info-title">Color</p>
						<ul id="colorPicker"></ul>
					</div>
					<div class="info-row" style="gap:75px;">
						<p class="info-title">Description</p>
						<p style="width:400px;">@Model.Description</p>
					</div>
				</div>
				<div class="bottom-right">
					@{
						if (Model.DiscountPct != 0)
						{
							<label class="list-price">$@Model.ListPrice.ToString("N2")</label>
							<label class="discount">@((Model.DiscountPct * 100).ToString("N0"))% Off</label>
							<label class="price"> $@Model.FinalPrice.ToString("N2")</label>
						}
						else
						{
							<label class="price">$@Model.ListPrice.ToString("N2")</label>
						}
					}
					<div class="product-buttons">
						@(Html.Kendo().Button()
							.Name("addToCartButton_" + @Model.Id)
							.Content("Add to cart")
							.ImageUrl(Url.Content("~/images/shopping_cart.svg"))
							.HtmlAttributes(new { type = "button", @class = "cart-button" })
							.Events(e => e.Click("addProductToShoppingCart"))
							.Enable(Model.InStock > 0)
						)
						@(Html.Kendo().Button()
							.Name("addToFavoritesButton_" + @Model.Id)
							.Content("Add to Favorites")
							.ImageUrl(Url.Content("~/images/heart.svg"))
							.HtmlAttributes(new { type = "button", @class = "favorites-button" })
							.Events(e => e.Click("addProductToFavorites"))
						)
					</div>
				</div>
			</div>
		</div>
	</div>

	<hr class="splitter2">

	@{
		if (Model.ModelId != null)
		{
			<div>
				<h4 class="similar-products">Similar Products</h4>
				@(Html.Kendo().ListView<Models.ViewModels.ProductAllViewModel>()
					.Name("similarProductsListView")
					.TagName("div")
					.ClientTemplateId("product-template")
					.Navigatable()
					.DataSource(dataSource => dataSource
						.Ajax()
						.ServerOperation(true)
						.Read(r => r.Action("ReadSimilarProducts", "Products", new { productId = Model.Id, subCategoryId = @Model.SubCategoryId, count = 4 }).Type(HttpVerbs.Get))
					)
					.Events(e => e.DataBound("distinguishFavorites"))
				)
			</div>
		}
	}
</div>

<script type="text/html" id="product-template">
	@await Html.PartialAsync("_TileProductCard.cshtml")
</script>

<script>
	$(document).ready(function () {
		var productId = "@Model.Id";
		var modelId = "@Model.ModelId";

		$.get("/Products/GetAvailableColors?productId=" + productId, function (data) {
			$("#colorPicker").kendoRadioGroup({
				items: data,

				layout: "horizontal",
				value: "@Model.Color",
				change: function () { selectAlternateProductVersion(modelId); }
			});
		});

		distinguishFavorites();
	});
</script>

<style>
	.details-container {
		width: 1440px;
		margin: auto;
	}

	.splitter1 {
		border-top: 2px solid #bbb;
	}

	.splitter2 {
		margin-top: 80px;
		margin-bottom: 80px;
		border-top: 2px solid #bbb;
	}

	.model-details {
		display: flex;
		flex-direction: row;
	}

	.model-info {
		display: flex;
		flex-direction: column;
		margin-left: 40px;
	}

	.info-bottom {
		display: flex;
		flex-direction: row;
	}

	.bottom-left {
		width: 650px;
		display: flex;
		gap: 8px;
		flex-direction: column;
	}

	.info-row {
		display: flex;
		flex-direction: row;
	}

	.bottom-right {
		display: flex;
		flex-direction: column;
	}

	.info-text {
		display: flex;
		flex-direction: column;
	}

	.similar-products {
		font-weight: 500;
		font-size: 26px;
		line-height: 46px;
		letter-spacing: -0.9px;
		color: #000000;
		margin-left: 20px;
	}

	.k-listview-content {
		display: flex;
		flex-direction: row;
		justify-content: left;
		border: none;
	}

	.large-image {
		width: 453px;
		height: 453px;
	}

	#breadcrumb {
		margin-top: 35px;
		margin-bottom: 58px;
	}

	.details-heading {
		font-weight: 500;
		font-size: 40px;
		line-height: 58px;
		letter-spacing: -0.9px;
	}

	.splitter {
		border: 1px solid #E5E5E5;
	}

	.info-text {
		width: 300px;
	}

	.info-title {
		font-weight: 600;
		font-size: 16px;
		line-height: 24px;
	}

	.info-value {
		font-weight: 400;
		font-size: 16px;
		line-height: 24px;
		color: #1D252C;
	}

	.k-picker {
		width: 174px;
	}

	.k-input-value-text {
		font-size: 16px;
	}

	.k-radio.k-checked, .k-radio:checked {
		background-color: var(--voyago-green) !important;
		border: 1px solid !important;
		border-color: var(--voyago-green) !important;
	}

	.list-price {
		font-weight: 500;
		text-align: right;
		font-size: 40px;
		line-height: 58px;
		letter-spacing: -0.9px;
		color: indianred;
		margin-bottom: 5px;
		text-decoration: line-through;
	}
	.discount {
		font-weight: 500;
		text-align: right;
		font-size: 22px;
		letter-spacing: -0.9px;
		margin-bottom: 5px;
	}
	.price {
		font-weight: 500;
		text-align: right;
		font-size: 40px;
		line-height: 58px;
		letter-spacing: -0.9px;
		color: var(--voyago-green);
		margin-bottom: 22px;
	}

	.product-buttons {
		display: flex;
		flex-direction: column;
		gap: 20px;
	}

	.cart-button {
		width: 250px;
		height: 40px;
		border-radius: 4px;
		background: var(--voyago-green);
		color: #FFFFFF !important;
	}

		.cart-button:hover {
			background: #6AA985;
		}

	.favorites-button {
		width: 250px;
		height: 40px;
		background: #FFFFFF;
		border: 1px solid #272727;
		border-radius: 4px;
	}

	.k-button-text {
		font-weight: 500 !important;
		font-size: 16px !important;
		line-height: 24px !important;
		text-align: center !important;
	}
</style>